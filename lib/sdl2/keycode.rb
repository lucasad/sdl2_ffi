require 'sdl2'
require 'sdl2/scancode'
require 'yinum'

module SDL2

  typedef :int32, :keycode
  typedef :int32, :scancode

  # TODO: Review if I translated lines 44~45 right.
  SCANCODE_MASK = 1<<30

  def self.scancode_to_keycode(scancode)
    scancode | SCANCODE_MASK
  end

  Keycode = Enum.new(:KEYCODE, {
    :UNKNOWN => 0,

    :RETURN => '\r',
    :ESCAPE => '\033',
    :BACKSPACE => '\b',
    :TAB => '\t',
    :SPACE => ' ',
    :EXCLAIM => '!',
    :QUOTEDBL => '"',
    :HASH => '#',
    :PERCENT => '%',
    :DOLLAR => '$',
    :AMPERSAND => '&',
    :QUOTE => '\'',
    :LEFTPAREN => '(',
    :RIGHTPAREN => ')',
    :ASTERISK => '*',
    :PLUS => '+',
    :COMMA => ',',
    :MINUS => '-',
    :PERIOD => '.',
    :SLASH => '/',
    :'0' => '0',
    :'1' => '1',
    :'2' => '2',
    :'3' => '3',
    :'4' => '4',
    :'5' => '5',
    :'6' => '6',
    :'7' => '7',
    :'8' => '8',
    :'9' => '9',
    :COLON => ':',
    :SEMICOLON => ';',
    :LESS => '<',
    :EQUALS => '=',
    :GREATER => '>',
    :QUESTION => '?',
    :AT => '@',

    :LEFTBRACKET => '[',
    :BACKSLASH => '\\',
    :RIGHTBRACKET => ']',
    :CARET => '^',
    :UNDERSCORE => '_',
    :BACKQUOTE => '`',
    :a => 'a',
    :b => 'b',
    :c => 'c',
    :d => 'd',
    :e => 'e',
    :f => 'f',
    :g => 'g',
    :h => 'h',
    :i => 'i',
    :j => 'j',
    :k => 'k',
    :l => 'l',
    :m => 'm',
    :n => 'n',
    :o => 'o',
    :p => 'p',
    :q => 'q',
    :r => 'r',
    :s => 's',
    :t => 't',
    :u => 'u',
    :v => 'v',
    :w => 'w',
    :x => 'x',
    :y => 'y',
    :z => 'z',

    :CAPSLOCK => scancode_to_keycode(Scancode.CAPSLOCK),

    :F1 => scancode_to_keycode(Scancode.F1),
    :F2 => scancode_to_keycode(Scancode.F2),
    :F3 => scancode_to_keycode(Scancode.F3),
    :F4 => scancode_to_keycode(Scancode.F4),
    :F5 => scancode_to_keycode(Scancode.F5),
    :F6 => scancode_to_keycode(Scancode.F6),
    :F7 => scancode_to_keycode(Scancode.F7),
    :F8 => scancode_to_keycode(Scancode.F8),
    :F9 => scancode_to_keycode(Scancode.F9),
    :F10 => scancode_to_keycode(Scancode.F10),
    :F11 => scancode_to_keycode(Scancode.F11),
    :F12 => scancode_to_keycode(Scancode.F12),

    :PRINTSCREEN => scancode_to_keycode(Scancode.PRINTSCREEN),
    :SCROLLLOCK => scancode_to_keycode(Scancode.SCROLLLOCK),
    :PAUSE => scancode_to_keycode(Scancode.PAUSE),
    :INSERT => scancode_to_keycode(Scancode.INSERT),
    :HOME => scancode_to_keycode(Scancode.HOME),
    :PAGEUP => scancode_to_keycode(Scancode.PAGEUP),
    :DELETE => '\177',
    :END => scancode_to_keycode(Scancode.END),
    :PAGEDOWN => scancode_to_keycode(Scancode.PAGEDOWN),
    :RIGHT => scancode_to_keycode(Scancode.RIGHT),
    :LEFT => scancode_to_keycode(Scancode.LEFT),
    :DOWN => scancode_to_keycode(Scancode.DOWN),
    :UP => scancode_to_keycode(Scancode.UP),

    :NUMLOCKCLEAR => scancode_to_keycode(Scancode.NUMLOCKCLEAR),
    :KP_DIVIDE => scancode_to_keycode(Scancode.KP_DIVIDE),
    :KP_MULTIPLY => scancode_to_keycode(Scancode.KP_MULTIPLY),
    :KP_MINUS => scancode_to_keycode(Scancode.KP_MINUS),
    :KP_PLUS => scancode_to_keycode(Scancode.KP_PLUS),
    :KP_ENTER => scancode_to_keycode(Scancode.KP_ENTER),
    :KP_1 => scancode_to_keycode(Scancode.KP_1),
    :KP_2 => scancode_to_keycode(Scancode.KP_2),
    :KP_3 => scancode_to_keycode(Scancode.KP_3),
    :KP_4 => scancode_to_keycode(Scancode.KP_4),
    :KP_5 => scancode_to_keycode(Scancode.KP_5),
    :KP_6 => scancode_to_keycode(Scancode.KP_6),
    :KP_7 => scancode_to_keycode(Scancode.KP_7),
    :KP_8 => scancode_to_keycode(Scancode.KP_8),
    :KP_9 => scancode_to_keycode(Scancode.KP_9),
    :KP_0 => scancode_to_keycode(Scancode.KP_0),
    :KP_PERIOD => scancode_to_keycode(Scancode.KP_PERIOD),

    :APPLICATION => scancode_to_keycode(Scancode.APPLICATION),
    :POWER => scancode_to_keycode(Scancode.POWER),
    :KP_EQUALS => scancode_to_keycode(Scancode.KP_EQUALS),
    :F13 => scancode_to_keycode(Scancode.F13),
    :F14 => scancode_to_keycode(Scancode.F14),
    :F15 => scancode_to_keycode(Scancode.F15),
    :F16 => scancode_to_keycode(Scancode.F16),
    :F17 => scancode_to_keycode(Scancode.F17),
    :F18 => scancode_to_keycode(Scancode.F18),
    :F19 => scancode_to_keycode(Scancode.F19),
    :F20 => scancode_to_keycode(Scancode.F20),
    :F21 => scancode_to_keycode(Scancode.F21),
    :F22 => scancode_to_keycode(Scancode.F22),
    :F23 => scancode_to_keycode(Scancode.F23),
    :F24 => scancode_to_keycode(Scancode.F24),
    :EXECUTE => scancode_to_keycode(Scancode.EXECUTE),
    :HELP => scancode_to_keycode(Scancode.HELP),
    :MENU => scancode_to_keycode(Scancode.MENU),
    :SELECT => scancode_to_keycode(Scancode.SELECT),
    :STOP => scancode_to_keycode(Scancode.STOP),
    :AGAIN => scancode_to_keycode(Scancode.AGAIN),
    :UNDO => scancode_to_keycode(Scancode.UNDO),
    :CUT => scancode_to_keycode(Scancode.CUT),
    :COPY => scancode_to_keycode(Scancode.COPY),
    :PASTE => scancode_to_keycode(Scancode.PASTE),
    :FIND => scancode_to_keycode(Scancode.FIND),
    :MUTE => scancode_to_keycode(Scancode.MUTE),
    :VOLUMEUP => scancode_to_keycode(Scancode.VOLUMEUP),
    :VOLUMEDOWN => scancode_to_keycode(Scancode.VOLUMEDOWN),
    :KP_COMMA => scancode_to_keycode(Scancode.KP_COMMA),
    :KP_EQUALSAS400 => scancode_to_keycode(Scancode.KP_EQUALSAS400),

    :ALTERASE => scancode_to_keycode(Scancode.ALTERASE),
    :SYSREQ => scancode_to_keycode(Scancode.SYSREQ),
    :CANCEL => scancode_to_keycode(Scancode.CANCEL),
    :CLEAR => scancode_to_keycode(Scancode.CLEAR),
    :PRIOR => scancode_to_keycode(Scancode.PRIOR),
    :RETURN2 => scancode_to_keycode(Scancode.RETURN2),
    :SEPARATOR => scancode_to_keycode(Scancode.SEPARATOR),
    :OUT => scancode_to_keycode(Scancode.OUT),
    :OPER => scancode_to_keycode(Scancode.OPER),
    :CLEARAGAIN => scancode_to_keycode(Scancode.CLEARAGAIN),
    :CRSEL => scancode_to_keycode(Scancode.CRSEL),
    :EXSEL => scancode_to_keycode(Scancode.EXSEL),

    :KP_00 => scancode_to_keycode(Scancode.KP_00),
    :KP_000 => scancode_to_keycode(Scancode.KP_000),
    :THOUSANDSSEPARATOR => scancode_to_keycode(Scancode.THOUSANDSSEPARATOR),
    :DECIMALSEPARATOR => scancode_to_keycode(Scancode.DECIMALSEPARATOR),
    :CURRENCYUNIT => scancode_to_keycode(Scancode.CURRENCYUNIT),
    :CURRENCYSUBUNIT => scancode_to_keycode(Scancode.CURRENCYSUBUNIT),
    :KP_LEFTPAREN => scancode_to_keycode(Scancode.KP_LEFTPAREN),
    :KP_RIGHTPAREN => scancode_to_keycode(Scancode.KP_RIGHTPAREN),
    :KP_LEFTBRACE => scancode_to_keycode(Scancode.KP_LEFTBRACE),
    :KP_RIGHTBRACE => scancode_to_keycode(Scancode.KP_RIGHTBRACE),
    :KP_TAB => scancode_to_keycode(Scancode.KP_TAB),
    :KP_BACKSPACE => scancode_to_keycode(Scancode.KP_BACKSPACE),
    :KP_A => scancode_to_keycode(Scancode.KP_A),
    :KP_B => scancode_to_keycode(Scancode.KP_B),
    :KP_C => scancode_to_keycode(Scancode.KP_C),
    :KP_D => scancode_to_keycode(Scancode.KP_D),
    :KP_E => scancode_to_keycode(Scancode.KP_E),
    :KP_F => scancode_to_keycode(Scancode.KP_F),
    :KP_XOR => scancode_to_keycode(Scancode.KP_XOR),
    :KP_POWER => scancode_to_keycode(Scancode.KP_POWER),
    :KP_PERCENT => scancode_to_keycode(Scancode.KP_PERCENT),
    :KP_LESS => scancode_to_keycode(Scancode.KP_LESS),
    :KP_GREATER => scancode_to_keycode(Scancode.KP_GREATER),
    :KP_AMPERSAND => scancode_to_keycode(Scancode.KP_AMPERSAND),
    :KP_DBLAMPERSAND => scancode_to_keycode(Scancode.KP_DBLAMPERSAND),
    :KP_VERTICALBAR => scancode_to_keycode(Scancode.KP_VERTICALBAR),
    :KP_DBLVERTICALBAR => scancode_to_keycode(Scancode.KP_DBLVERTICALBAR),
    :KP_COLON => scancode_to_keycode(Scancode.KP_COLON),
    :KP_HASH => scancode_to_keycode(Scancode.KP_HASH),
    :KP_SPACE => scancode_to_keycode(Scancode.KP_SPACE),
    :KP_AT => scancode_to_keycode(Scancode.KP_AT),
    :KP_EXCLAM => scancode_to_keycode(Scancode.KP_EXCLAM),
    :KP_MEMSTORE => scancode_to_keycode(Scancode.KP_MEMSTORE),
    :KP_MEMRECALL => scancode_to_keycode(Scancode.KP_MEMRECALL),
    :KP_MEMCLEAR => scancode_to_keycode(Scancode.KP_MEMCLEAR),
    :KP_MEMADD => scancode_to_keycode(Scancode.KP_MEMADD),
    :KP_MEMSUBTRACT =>        scancode_to_keycode(Scancode.KP_MEMSUBTRACT),
    :KP_MEMMULTIPLY =>        scancode_to_keycode(Scancode.KP_MEMMULTIPLY),
    :KP_MEMDIVIDE => scancode_to_keycode(Scancode.KP_MEMDIVIDE),
    :KP_PLUSMINUS => scancode_to_keycode(Scancode.KP_PLUSMINUS),
    :KP_CLEAR => scancode_to_keycode(Scancode.KP_CLEAR),
    :KP_CLEARENTRY => scancode_to_keycode(Scancode.KP_CLEARENTRY),
    :KP_BINARY => scancode_to_keycode(Scancode.KP_BINARY),
    :KP_OCTAL => scancode_to_keycode(Scancode.KP_OCTAL),
    :KP_DECIMAL => scancode_to_keycode(Scancode.KP_DECIMAL),
    :KP_HEXADECIMAL =>        scancode_to_keycode(Scancode.KP_HEXADECIMAL),

    :LCTRL => scancode_to_keycode(Scancode.LCTRL),
    :LSHIFT => scancode_to_keycode(Scancode.LSHIFT),
    :LALT => scancode_to_keycode(Scancode.LALT),
    :LGUI => scancode_to_keycode(Scancode.LGUI),
    :RCTRL => scancode_to_keycode(Scancode.RCTRL),
    :RSHIFT => scancode_to_keycode(Scancode.RSHIFT),
    :RALT => scancode_to_keycode(Scancode.RALT),
    :RGUI => scancode_to_keycode(Scancode.RGUI),

    :MODE => scancode_to_keycode(Scancode.MODE),

    :AUDIONEXT => scancode_to_keycode(Scancode.AUDIONEXT),
    :AUDIOPREV => scancode_to_keycode(Scancode.AUDIOPREV),
    :AUDIOSTOP => scancode_to_keycode(Scancode.AUDIOSTOP),
    :AUDIOPLAY => scancode_to_keycode(Scancode.AUDIOPLAY),
    :AUDIOMUTE => scancode_to_keycode(Scancode.AUDIOMUTE),
    :MEDIASELECT => scancode_to_keycode(Scancode.MEDIASELECT),
    :WWW => scancode_to_keycode(Scancode.WWW),
    :MAIL => scancode_to_keycode(Scancode.MAIL),
    :CALCULATOR => scancode_to_keycode(Scancode.CALCULATOR),
    :COMPUTER => scancode_to_keycode(Scancode.COMPUTER),
    :AC_SEARCH => scancode_to_keycode(Scancode.AC_SEARCH),
    :AC_HOME => scancode_to_keycode(Scancode.AC_HOME),
    :AC_BACK => scancode_to_keycode(Scancode.AC_BACK),
    :AC_FORWARD => scancode_to_keycode(Scancode.AC_FORWARD),
    :AC_STOP => scancode_to_keycode(Scancode.AC_STOP),
    :AC_REFRESH => scancode_to_keycode(Scancode.AC_REFRESH),
    :AC_BOOKMARKS => scancode_to_keycode(Scancode.AC_BOOKMARKS),

    :BRIGHTNESSDOWN =>        scancode_to_keycode(Scancode.BRIGHTNESSDOWN),
    :BRIGHTNESSUP => scancode_to_keycode(Scancode.BRIGHTNESSUP),
    :DISPLAYSWITCH => scancode_to_keycode(Scancode.DISPLAYSWITCH),
    :KBDILLUMTOGGLE =>        scancode_to_keycode(Scancode.KBDILLUMTOGGLE),
    :KBDILLUMDOWN => scancode_to_keycode(Scancode.KBDILLUMDOWN),
    :KBDILLUMUP => scancode_to_keycode(Scancode.KBDILLUMUP),
    :EJECT => scancode_to_keycode(Scancode.EJECT),
    :SLEEP => scancode_to_keycode(Scancode.SLEEP)
  })

  enum :keycode, Keycode.by_name

  KEYMOD_HASH = {
    :NONE =>   0x0000,
    :LSHIFT =>   0x0001,
    :RSHIFT =>   0x0002,
    :LCTRL =>  0x0040,
    :RCTRL =>  0x0080,
    :LALT =>   0x0100,
    :RALT =>   0x0200,
    :LGUI =>   0x0400,
    :RGUI =>   0x0800,
    :NUM  =>   0x1000,
    :CAPS =>  0x2000,
    :MODE =>  0x4000,
    :RESERVED =>   0x8000
  }
  KEYMOD_HASH[:CTRL] = KEYMOD_HASH[:LCTRL]|KEYMOD_HASH[:RCTRL]
  KEYMOD_HASH[:SHIFT] = KEYMOD_HASH[:LSHIFT]|KEYMOD_HASH[:RSHIFT]
  KEYMOD_HASH[:ALT] = KEYMOD_HASH[:LALT]|KEYMOD_HASH[:RALT]
  KEYMOD_HASH[:GUI] = KEYMOD_HASH[:LGUI]|KEYMOD_HASH[:RGUI]

  Keymod = Enum.new( :KEYMOD, KEYMOD_HASH)  
  

end